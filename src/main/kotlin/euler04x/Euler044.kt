package euler04x

import java.util.*

/**
 * Created by joeyt on 2/21/16.
 */
object Euler044 {
    private val copyPasta = """
Pentagon numbers
Problem 44
Pentagonal numbers are generated by the formula, Pn=n(3n−1)/2. The first ten pentagonal numbers are:

1, 5, 12, 22, 35, 51, 70, 92, 117, 145, ...

It can be seen that P4 + P7 = 22 + 70 = 92 = P8. However, their difference, 70 − 22 = 48, is not pentagonal.

Find the pair of pentagonal numbers, Pj and Pk, for which their sum and difference are pentagonal and D = |Pk − Pj| is minimised; what is the value of D?
"""
    private val initialThoughts = """
    
"""

    fun p(n: Int): Long = n.toLong() * (3L*n.toLong() - 1L) / 2L

    val Pentagons by lazy { LongArray(10000) { p(it) } }
    val PentagonsSet by lazy { Pentagons.toSet() }

    data class PPair(val pj: Long, val pk: Long) {
        val sum = pj + pk
        val diff: Long by lazy {
            val d = pj - pk
            if (d >= 0) d
            else d * -1
        }
    }

    val pairs: Set<PPair> by lazy {
        val set = LinkedHashSet<PPair>()
        var rows = 0
        for (j in Pentagons) {
            rows += 1
            for (k in Pentagons) {
                if (j == 0L || k == 0L || j == k) continue
                val sum = j + k
                if (sum !in PentagonsSet) continue
                val d = j - k
                val diff = if (d >= 0) d else d * -1
                if (diff !in PentagonsSet) continue
                println("row $rows j = $j k = $k")
                val pair = PPair(j, k)
                val other = PPair(k, j)
                if (other !in set) set.add(pair)
            }
            if (rows % 1000 == 0) println("rows $rows")
        }
        Collections.unmodifiableSet(set)
    }

}